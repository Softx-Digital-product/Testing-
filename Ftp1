<?php

// FTP connection settings
$ftpServer = 'ftp.example.com';
$ftpUsername = 'your-ftp-username';
$ftpPassword = 'your-ftp-password';

// Local folder to upload
$localFolder = '/path/to/local/folder';

// Remote folder on FTP server
$remoteFolder = '/path/to/remote/folder';

// Function to recursively upload files and folders via FTP
function uploadFolder($localPath, $remotePath, $ftpConnection) {
    // Open the local directory
    $handle = opendir($localPath);
    
    // Check if the remote directory exists, if not, create it
    if (!@ftp_chdir($ftpConnection, $remotePath)) {
        ftp_mkdir($ftpConnection, $remotePath);
    }
    
    // Loop through the local directory
    while (($file = readdir($handle)) !== false) {
        // Skip . and ..
        if ($file == '.' || $file == '..') {
            continue;
        }
        
        $localFilePath = $localPath . '/' . $file;
        $remoteFilePath = $remotePath . '/' . $file;
        
        // If it's a directory, recursively upload it
        if (is_dir($localFilePath)) {
            uploadFolder($localFilePath, $remoteFilePath, $ftpConnection);
        } else {
            // If it's a file, upload it
            ftp_put($ftpConnection, $remoteFilePath, $localFilePath, FTP_BINARY);
        }
    }
    
    // Close the local directory handle
    closedir($handle);
}

// Connect to FTP server
$ftpConnection = ftp_connect($ftpServer);
ftp_login($ftpConnection, $ftpUsername, $ftpPassword);

// Upload the folder
uploadFolder($localFolder, $remoteFolder, $ftpConnection);

// Close FTP connection
ftp_close($ftpConnection);

?>




<?php

$server1 = [
    "server" => "server1",
    "username" => "username1",
    "password" => "password1",
    "folder" => "/path/to/folder1"
];

$server2 = [
    "server" => "server2",
    "username" => "username2",
    "password" => "password2",
    "folder" => "/path/to/folder2"
];

$server3 = [
    "server" => "server3",
    "username" => "username3",
    "password" => "password3",
    "folder" => "/path/to/folder3"
];

$servers = [$server1, $server2, $server3];

// Function to synchronize files between servers
function syncServers($servers) {
    foreach ($servers as $source) {
        foreach ($servers as $destination) {
            if ($source !== $destination) {
                syncFolders($source, $destination);
            }
        }
    }
}

// Function to synchronize folders between servers
function syncFolders($source, $destination) {
    // Connect to source server
    $sourceConn = ftp_connect($source["server"]);
    ftp_login($sourceConn, $source["username"], $source["password"]);

    // Connect to destination server
    $destConn = ftp_connect($destination["server"]);
    ftp_login($destConn, $destination["username"], $destination["password"]);

    // Start synchronization
    sync($sourceConn, $source["folder"], $destConn, $destination["folder"]);

    // Close FTP connections
    ftp_close($sourceConn);
    ftp_close($destConn);
}

// Function to recursively sync folders
function sync($sourceConn, $sourceFolder, $destConn, $destFolder) {
    // List files and directories in source folder
    $files = ftp_nlist($sourceConn, $sourceFolder);

    // Loop through each file/directory
    foreach ($files as $file) {
        // Skip current and parent directory entries
        if ($file != "." && $file != "..") {
            $sourcePath = $sourceFolder . "/" . $file;
            $destPath = $destFolder . "/" . $file;

            // Check if current item is a directory
            if (ftp_size($sourceConn, $sourcePath) == -1) {
                // Create corresponding directory on destination
                if (!ftp_mkdir($destConn, $destPath)) {
                    echo "Failed to create directory: $destPath\n";
                } else {
                    // Recursively sync subdirectory
                    sync($sourceConn, $sourcePath, $destConn, $destPath);
                }
            } else {
                // Copy file to destination
                if (!ftp_get($sourceConn, $destPath, $sourcePath, FTP_BINARY)) {
                    echo "Failed to copy file: $sourcePath\n";
                }
            }
        }
    }
}

// Start synchronization between servers
syncServers($servers);

